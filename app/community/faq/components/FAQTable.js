"use client";
import React, { useState } from "react";
import { FaChevronRight } from "react-icons/fa6";
import {
  HiChevronDoubleRight,
  HiChevronDoubleLeft,
  HiChevronRight,
  HiChevronLeft,
} from "react-icons/hi";
import Link from "next/link";
import { ChevronDown, ChevronUp } from "lucide-react";
import { Pagination } from "@heroui/react";
export default function FAQTable() {
  const [openIndex, setOpenIndex] = useState(0); // Ï≤´ Î≤àÏß∏ Ìï≠Î™©ÏùÑ Í∏∞Î≥∏ÏúºÎ°ú Ïó¥Ïñ¥Îë†

  const faqData = [
    {
      question: "ÏàòÏòÅÏùÑ Î™ªÌïòÎäîÎç∞ÎèÑ Í∞ÄÎä•Ìï†ÍπåÏöî?",
      answer:
        "Ïä§Ïø†Î≤ÑÎã§Ïù¥Îπô, ÌîÑÎ¶¨Îã§Ïù¥Îπô, Î®∏Î©îÏù¥ÎìúÎäî ÏàòÏòÅÏùÑ Î™ªÌï¥ÎèÑ Í∞ÄÎä•Ìï©ÎãàÎã§.\nÏàòÏòÅÍ≥º Îã§Î•∏ Ï†êÏù¥ ÏûàÏñ¥ÏÑú ÎèÑÏõÄÏùÑ Î∞õÍ∏∞ ÎïåÎ¨∏Ïóê ÏàòÏòÅÏùÑ Î™ªÌï¥ÎèÑ Ï†ÑÌòÄ ÏÉÅÍ¥Ä ÏóÜÏúºÎÇò, Ïó∞ÏäµÌïòÏãúÍ≥† ÍµêÏú° Î∞õÏúºÏãúÎäî Í≤ÉÏùÑ Ï∂îÏ≤úÌï©ÎãàÎã§.",
    },
    {
      question: "ÏßÅÏû•Ïù∏Ïù∏Îç∞, Ï£ºÎßêÏóêÎèÑ Í∞ïÏäµÏù¥ Í∞ÄÎä•ÌïúÍ∞ÄÏöî?",
      answer: "Ï£ºÎßê Í∞ïÏäµÏù¥ Í∞ÄÎä•Ìï©ÎãàÎã§. ÏûêÏÑ∏Ìïú ÏùºÏ†ïÏùÄ Î¨∏Ïùò Î∂ÄÌÉÅÎìúÎ¶ΩÎãàÎã§.",
    },
    {
      question: "Í∞ïÏäµ Ï§ÄÎπÑÎ¨ºÏù¥ Ïñ¥ÎñªÍ≤å ÎêòÎÇòÏöî?",
      answer: "ÏàòÏòÅÎ≥µ, ÏàòÍ±¥Îßå Ï§ÄÎπÑÌï¥ Ïò§ÏãúÎ©¥ Îê©ÎãàÎã§.",
    },
    {
      question: "ÍµêÏú°ÏõêÏóêÎèÑ, ÏàòÏ§ë ÏÇ¨ÏßÑ Ï¥¨ÏòÅÏù¥ Í∞ÄÎä•ÌïúÍ∞ÄÏöî?",
      answer: "ÎÑ§, ÏàòÏ§ë Ï¥¨ÏòÅÏù¥ Í∞ÄÎä•Ìï©ÎãàÎã§. ÏÇ¨Ï†Ñ ÏòàÏïΩÏù¥ ÌïÑÏöîÌï©ÎãàÎã§.",
    },
    {
      question: "ÏòàÏïΩÎ≥ÄÍ≤Ω/ Ï∑®ÏÜåÎ•º ÌïòÍ≥† Ïã∂Ïñ¥Ïöî Ïñ¥ÎñªÍ≤å Ìï¥ÏïºÌïòÎÇòÏöî?",
      answer: "ÏòàÏïΩ Î≥ÄÍ≤Ω Î∞è Ï∑®ÏÜåÎäî ÏµúÏÜå 3Ïùº Ï†ÑÍπåÏßÄ Ïó∞ÎùΩ Ï£ºÏãúÍ∏∞ Î∞îÎûçÎãàÎã§.",
    },
    {
      question: "Í≤∞Ï†úÎäî Ïñ¥ÎñªÍ≤å Ìï¥ÏïºÌïòÎÇòÏöî?",
      answer: "ÌòÑÍ∏à, Ïπ¥Îìú, Í≥ÑÏ¢åÏù¥Ï≤¥ Î™®Îëê Í∞ÄÎä•Ìï©ÎãàÎã§.",
    },
    {
      question: "Í∞ïÏäµ Ïù∏ÏõêÏùÄ Ïñ¥ÎñªÍ≤å ÎêòÎÇòÏöî?",
      answer: "1:1 Í∞úÏù∏ Í∞ïÏäµÎ∂ÄÌÑ∞ ÏµúÎåÄ 4Ïù∏ÍπåÏßÄ Í∞ÄÎä•Ìï©ÎãàÎã§.",
    },
    {
      question: "Ïó¨Îü¨Î™ÖÏù¥ÏÑú Í≤∞Ï†úÌïú Í∞ôÏù¥ÌïòÍ≥† Í∞ïÏäµÏùÄ Îî∞Î°ú Î∞õÏïÑÎèÑ ÎêòÎÇòÏöî?",
      answer:
        "ÎÑ§, Í∞ÄÎä•Ìï©ÎãàÎã§. Í∞úÎ≥ÑÏ†ÅÏúºÎ°ú ÏõêÌïòÏãúÎäî ÏãúÍ∞ÑÏóê Í∞ïÏäµ Î∞õÏúºÏã§ Ïàò ÏûàÏäµÎãàÎã§.",
    },
  ];

  const toggleAccordion = (index) => {
    setOpenIndex(openIndex === index ? -1 : index);
  };
  return (
    <div className="w-full mx-auto p-4 my-12">
      {/* Search Bar */}
      <div className="mb-6 flex justify-end items-center">
        <div className="relative w-1/3">
          <input
            type="text"
            placeholder="Í≤ÄÏÉâÏñ¥Î•º ÏûÖÎ†•Ìï¥Ï£ºÏÑ∏Ïöî"
            className="w-full p-2 border rounded-md pr-10 bg-[#EBEBEB]"
          />
          <button className="absolute right-2 top-1/2 transform -translate-y-1/2">
            üîç
          </button>
        </div>
      </div>

      {/* FAQ Accordion */}
      <div className="w-full mx-auto p-4">
        <h1 className="text-4xl font-bold mb-6 pb-2 border-b border-t border-gray-500 h-24 text-center my-6 flex items-center justify-center">
          ÏûêÏ£º Î¨ªÎäî ÏßàÎ¨∏ FAQ
        </h1>

        <div className="space-y-2">
          {faqData.map((item, index) => (
            <div key={index} className="border-b">
              <button
                onClick={() => toggleAccordion(index)}
                className="w-full flex justify-between items-center py-4 text-left hover:bg-gray-50 transition-colors"
              >
                <span className=" flex items-center text-3xl font-bold text-black">
                  <span className="mr-2 font-bold">Q</span>
                  {item.question}
                </span>
                {openIndex === index ? (
                  <ChevronUp className=" text-gray-500 " />
                ) : (
                  <ChevronDown className=" text-gray-500 " />
                )}
              </button>

              <div
                className={`overflow-hidden transition-all duration-300 ease-in-out ${
                  openIndex === index ? "max-h-40" : "max-h-0"
                }`}
              >
                <div className="p-4 bg-gray-50">
                  
                  {item.answer.split("\n").map((line, i) => (
                    <p key={i} className={`mb-1 text-2xl ${i === 0 ? "font-bold" : ""}`}>
                      {i === 0 && <span className="text-gray-500 mr-2 text-2xl">A</span>}
                      {line}
                    </p>
                  ))}
                </div>
              </div>
            </div>
          ))}
        </div>
      </div>

      {/* Pagination */}
      <div className="flex justify-center mt-6 gap-2">
        {/* <button className="px-3 py-1 border rounded hover:bg-gray-100">
          <HiChevronDoubleLeft className="text-4xl" />
        </button>
        <button className="px-3 py-1 border rounded hover:bg-gray-100">
          <HiChevronLeft className="text-4xl" />
        </button>
        <button className="px-3 py-1 border rounded bg-blue-500 text-white text-[20px]">
          1
        </button>
        <button className="px-3 py-1 border rounded hover:bg-gray-100">
          <HiChevronRight className="text-4xl" />
        </button>
        <button className="px-3 py-1 border rounded hover:bg-gray-100">
          <HiChevronDoubleRight className="text-4xl" />
        </button> */}
        <Pagination isCompact showControls initialPage={1} total={10} />
      </div>
    </div>
  );
}
